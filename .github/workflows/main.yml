name: Deploy .NET App to IIS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Uncomment if needed
      # - name: Setup .NET SDK
      #   uses: actions/setup-dotnet@v4
      #   with:
      #     dotnet-version: '8.0.x'

      # - name: Restore Dependencies
      #   run: dotnet restore WebApplication1/WebApplication1.csproj

      - name: Publish .NET Project
        run: dotnet publish WebApplication1/WebApplication1.csproj -c Release -o ./publish

      - name: Stop App Pool 'mywebsite'
        shell: pwsh
        run: |
          Import-Module WebAdministration
          if ((Get-WebAppPoolState -Name "mywebsite").Value -eq "Started") {
            Stop-WebAppPool -Name "mywebsite"
            Write-Host "App Pool 'mywebsite' stopped successfully."
          } else {
            Write-Host "App Pool 'mywebsite' is already stopped."
          }

      - name: Deploy to IIS
        shell: pwsh
        run: |
          $destination = "D:\myapplication"
          if (Test-Path $destination) {
            Remove-Item "$destination\*" -Recurse -Force
          } else {
            New-Item -Path $destination -ItemType Directory
          }
          Copy-Item -Path "./publish/*" -Destination $destination -Recurse

      - name: Start App Pool 'mywebsite'
        shell: pwsh
        run: |
          Import-Module WebAdministration
          if ((Get-WebAppPoolState -Name "mywebsite").Value -ne "Started") {
            Start-WebAppPool -Name "mywebsite"
            Write-Host "App Pool 'mywebsite' started successfully."
          } else {
            Write-Host "App Pool 'mywebsite' is already running."
          }
